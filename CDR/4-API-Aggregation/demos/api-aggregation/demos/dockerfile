# Use the official Golang image to create a build artifact.
FROM golang:1.16 as builder

# Set the Current Working Directory inside the container
WORKDIR /app

# Copy go mod and sum files
COPY go.mod go.sum ./

# Download all dependencies. Dependencies will be cached if the go.mod and go.sum files are not changed
RUN go mod download

# Copy the source from the current directory to the Working Directory inside the container
COPY . .

# Build the Go app
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o /server main.go

# Start a new stage from scratch
FROM alpine:latest

# Copy the Pre-built binary file from the previous stage
COPY --from=builder /server /server

# Copy TLS certificates
COPY tls.crt /tls/tls.crt
COPY tls.key /tls/tls.key

# Expose port 8443 to the outside world
EXPOSE 8443

# Command to run the executable
ENTRYPOINT ["/server"]
